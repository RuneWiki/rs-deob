import java.security.MessageDigest;
import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!kc")
public class class94 {

    @OriginalMember(owner = "client!kc", name = "c", descriptor = "[S")
    public static short[] field1544 = new short[] { -4160, -4163, -8256, -8259, 22461 };

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "Lmh;")
    public static class62 field1542 = class201.method1405(true, "m");

    @OriginalMember(owner = "client!kc", name = "d", descriptor = "[I")
    public static int[] field1545 = new int[] { -1, -1, -1, -1, -1, -1, -1, -1, 85, 80, 84, -1, 91, -1, -1, -1, 81, 82, 86, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, 83, 104, 105, 103, 102, 96, 98, 97, 99, -1, -1, -1, -1, -1, -1, -1, 25, 16, 17, 18, 19, 20, 21, 22, 23, 24, -1, -1, -1, -1, -1, -1, -1, 48, 68, 66, 50, 34, 51, 52, 53, 39, 54, 55, 56, 70, 69, 40, 41, 32, 35, 49, 36, 38, 67, 33, 65, 37, 64, -1, -1, -1, -1, -1, 228, 231, 227, 233, 224, 219, 225, 230, 226, 232, 89, 87, -1, 88, 229, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, -1, -1, -1, 101, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };

    @OriginalMember(owner = "client!kc", name = "f", descriptor = "[[S")
    public static short[][] field1547 = new short[][] { { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191, 949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 } };

    @OriginalMember(owner = "client!kc", name = "j", descriptor = "[I")
    public static int[] field1551 = new int[] { 1, 1, 1, 1 };

    @OriginalMember(owner = "client!kc", name = "b", descriptor = "I")
    public static int field1543;

    @OriginalMember(owner = "client!kc", name = "e", descriptor = "I")
    public static int field1546;

    @OriginalMember(owner = "client!kc", name = "g", descriptor = "I")
    public static int field1548;

    @OriginalMember(owner = "client!kc", name = "i", descriptor = "I")
    public static int field1550;

    @OriginalMember(owner = "client!kc", name = "k", descriptor = "I")
    public static int field1552;

    @OriginalMember(owner = "client!kc", name = "l", descriptor = "I")
    public static int field1553;

    @OriginalMember(owner = "client!kc", name = "m", descriptor = "I")
    public static int field1554;

    @OriginalMember(owner = "client!kc", name = "h", descriptor = "Lld;")
    public static class269 field1549;

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "([SI)[S", line = 6)
    public static final short[] method755(short[] arg0, int arg1) {
        field1546++;
        if (arg0 == null) {
            return null;
        }
        if (arg1 != -31168) {
            field1547 = (short[][]) ((short[][]) null);
        }
        short[] var2 = new short[arg0.length];
        class231.method1638(arg0, 0, var2, 0, arg0.length);
        return var2;
    }

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "(I)V", line = 36)
    public static void method756(int arg0) {
        field1542 = null;
        field1545 = null;
        if (arg0 != 32032) {
            field1542 = (class62) null;
        }
        field1547 = (short[][]) null;
        field1549 = null;
        field1551 = null;
        field1544 = null;
    }

    @OriginalMember(owner = "client!kc", name = "b", descriptor = "(I)V", line = 56)
    public static final void method757(int arg0) {
        for (int var1 = 0; var1 < 5; var1++) {
            class219.field3774[var1] = false;
        }
        if (arg0 != 5) {
            field1551 = (int[]) null;
        }
        class134.field2188 = -1;
        class44.field665 = -1;
        field1554++;
        class21.field220 = 1;
    }

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "(ZILhi;Lhi;Ltj;)V", line = 107)
    public static final void method758(boolean arg0, int arg1, class26 arg2, class26 arg3, class11 arg4) {
        field1548++;
        class115.field1931 = arg2;
        class251.field4250 = arg3;
        class111.field1825 = arg0;
        int var5 = class251.field4250.method151((byte) 74) - 1;
        int var6 = -40 % ((-arg1 - 55) / 47);
        class262.field4404 = var5 * 256 + class251.field4250.method159(var5, true);
        class43.field659 = arg4;
    }

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "(ILmh;)Z", line = 123)
    public static final boolean method759(int arg0, class62 arg1) {
        field1552++;
        if (arg1 == null) {
            return false;
        }
        for (int var2 = 0; var2 < class141.field2269; var2++) {
            if (arg1.method436(class184.field2952[var2], 32)) {
                return true;
            }
        }
        if (arg0 >= -96) {
            return false;
        } else {
            return false;
        }
    }

    @OriginalMember(owner = "client!kc", name = "b", descriptor = "(ILmh;)Z", line = 151)
    public static final boolean method760(int arg0, class62 arg1) {
        field1550++;
        try {
            int var2 = arg1.method417(44, (byte) 125);
            if (var2 == -1) {
                return false;
            }
            class62 var3 = arg1.method429(var2, 0, true);
            class62 var4 = arg1.method407(var2 + 1, 15552);
            MessageDigest var5 = MessageDigest.getInstance("SHA");
            var5.reset();
            var5.update(var3.method404(-231));
            byte[] var6 = var5.digest();
            byte[] var7 = var4.method424(10);
            class92 var8 = new class92(5000);
            var8.method726(0, var7.length, (byte) -3, var7);
            var8.field1476 = 0;
            var8.method733((byte) 3, class98.field1606, class284.field4852);
            if (var8.field1495[0] != 1) {
                return false;
            }
            int var9 = -65 % ((87 - arg0) / 36);
            for (int var10 = 0; var10 < 20; var10++) {
                if (var8.field1495[var10 + 1] != var6[var10]) {
                    return false;
                }
            }
            return true;
        } catch (Exception var12) {
            return false;
        }
    }

    @OriginalMember(owner = "client!kc", name = "a", descriptor = "(Z)V", line = 205)
    public static final void method761(boolean arg0) {
        field1553++;
        if (class244.method1710(-28075) != 2) {
            return;
        }
        byte var1 = (byte) (class282.field4815 - 4 & 0xFF);
        if (arg0) {
            field1551 = (int[]) null;
        }
        int var2 = class282.field4815 % 104;
        for (int var3 = 0; var3 < 4; var3++) {
            for (int var4 = 0; var4 < 104; var4++) {
                class15.field121[var3][var2][var4] = var1;
            }
        }
        if (class7.field85 == 3) {
            return;
        }
        for (int var5 = 0; var5 < 2; var5++) {
            class256.field4332[var5] = -1000000;
            class21.field219[var5] = 1000000;
            class219.field3779[var5] = 0;
            class122.field2026[var5] = 1000000;
            class54.field791[var5] = 0;
        }
        if (class21.field220 != 1) {
            int var6 = class165.method1186((byte) -58, class215.field3647, class258.field4351, class7.field85);
            if (var6 - class15.field134 < 800 && (class42.field641[class7.field85][class258.field4351 >> 7][class215.field3647 >> 7] & 0x4) != 0) {
                class46.method302(false, 1, class215.field3647 >> 7, class258.field4351 >> 7, (byte) 40, class256.field4320);
            }
            return;
        }
        if ((class42.field641[class7.field85][class268.field4551.field3821 >> 7][class268.field4551.field3814 >> 7] & 0x4) != 0) {
            class46.method302(false, 0, class268.field4551.field3814 >> 7, class268.field4551.field3821 >> 7, (byte) 40, class256.field4320);
        }
        if (class46.field683 >= 310) {
            return;
        }
        int var7 = class258.field4351 >> 7;
        int var8 = class215.field3647 >> 7;
        int var9 = class268.field4551.field3814 >> 7;
        int var10 = class268.field4551.field3821 >> 7;
        int var11;
        if (var10 <= var7) {
            var11 = var7 - var10;
        } else {
            var11 = var10 - var7;
        }
        int var12;
        if (var8 >= var9) {
            var12 = var8 - var9;
        } else {
            var12 = var9 - var8;
        }
        if (var12 < var11) {
            int var15 = var12 * 65536 / var11;
            int var16 = 32768;
            while (var7 != var10) {
                if (var10 > var7) {
                    var7++;
                } else if (var7 > var10) {
                    var7--;
                }
                if ((class42.field641[class7.field85][var7][var8] & 0x4) != 0) {
                    class46.method302(false, 1, var8, var7, (byte) 40, class256.field4320);
                    break;
                }
                var16 += var15;
                if (var16 >= 65536) {
                    var16 -= 65536;
                    if (var9 > var8) {
                        var8++;
                    } else if (var9 < var8) {
                        var8--;
                    }
                    if ((class42.field641[class7.field85][var7][var8] & 0x4) != 0) {
                        class46.method302(false, 1, var8, var7, (byte) 40, class256.field4320);
                        break;
                    }
                }
            }
            return;
        }
        int var13 = var11 * 65536 / var12;
        int var14 = 32768;
        while (var8 != var9) {
            if (var8 < var9) {
                var8++;
            } else if (var8 > var9) {
                var8--;
            }
            if ((class42.field641[class7.field85][var7][var8] & 0x4) != 0) {
                class46.method302(false, 1, var8, var7, (byte) 40, class256.field4320);
                break;
            }
            var14 += var13;
            if (var14 >= 65536) {
                if (var10 > var7) {
                    var7++;
                } else if (var7 > var10) {
                    var7--;
                }
                var14 -= 65536;
                if ((class42.field641[class7.field85][var7][var8] & 0x4) != 0) {
                    class46.method302(false, 1, var8, var7, (byte) 40, class256.field4320);
                    break;
                }
            }
        }
    }
}
