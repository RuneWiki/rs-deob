import java.util.Random;
import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!um")
public class class487 extends class386 {

    @OriginalMember(owner = "client!um", name = "C", descriptor = "I")
    private int field6803 = 2048;

    @OriginalMember(owner = "client!um", name = "G", descriptor = "I")
    private int field6807 = 1;

    @OriginalMember(owner = "client!um", name = "E", descriptor = "I")
    private int field6805 = 2;

    @OriginalMember(owner = "client!um", name = "D", descriptor = "[S")
    private short[] field6804 = new short[512];

    @OriginalMember(owner = "client!um", name = "M", descriptor = "[B")
    private byte[] field6813 = new byte[512];

    @OriginalMember(owner = "client!um", name = "J", descriptor = "I")
    private int field6810 = 0;

    @OriginalMember(owner = "client!um", name = "I", descriptor = "I")
    private int field6809 = 5;

    @OriginalMember(owner = "client!um", name = "P", descriptor = "I")
    private int field6816 = 5;

    @OriginalMember(owner = "client!um", name = "K", descriptor = "Lwo;")
    public static class690 field6811 = new class690(11, -1);

    @OriginalMember(owner = "client!um", name = "S", descriptor = "[[S")
    private static short[][] field6818 = new short[][] { { 6554, 115, 10304, 28, 5702, 7756, 5681, 4510, -31835, 22437, 2859, -11339, 16, 5157, 10446, 3658, -27314, -21965, 472, 580, 784, 21966, 28950, -15697, -14002 }, { 9104, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466, 10145, -6882, 5027, 1457, 16565, -30545, 25486, 24, 5392, 10429, 3673, -27335, -21957, 192, 687, 412, 21821, 28835, -15460, -14019, 7072, 3990, 309, 910, 9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264, 10281, 3869, -28007, 10764, 8974, 3745, 10269, 914, 8629, -26438, 26779, -15208, 8728, 2982, -25718, 918, 6842, -25030, -5462, -14833, -22386, 8, -22468, -27479, -11237, 21664, 45, -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990, -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457, 8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232, -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124, 17935, 3218, 262, 5413, -27579, -25189, -26331, -28236, -28144, -23804, -23261, -23013, -19045, 5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446, 9647, -27504, -27586, -31695, 11142, 18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084, -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833, 28967, -25290, 30866, 13466, -28403, -24022, -14042, -22472, -18166, 20493, -27626, -22266, -1784, -31473, 9612, 7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638, 8466, -25537 }, { 25485, 9105, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466, 10145, -6882, 5027, 1457, 16565, -30545, 24, 5392, 10429, 3673, -27335, -21957, 192, 687, 412, 21821, 28835, -15460, -14019, 7072, 3990, 309, 910, 9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264, 10281, 3869, -28007, 10764, 8974, 3745, 10269, 914, 8629, -26438, 26779, -15208, 8728, 2982, -25718, 918, 6842, -25030, -5462, -14833, -22386, 8, -22468, -27479, -11237, 21664, 45, -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990, -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457, 8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232, -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124, 17935, 3218, 262, 5413, -27579, -25189, -26331, -28236, -28144, -23804, -23261, -23013, -19045, 5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446, 9647, -27504, -27586, -31695, 11142, 18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084, -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833, 28967, -25290, 30866, 13466, -28403, -24022, -14042, -22472, -18166, 20493, -27626, -22266, -1784, -31473, 9612, 7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638, 8466, -25537 }, { 4620, 11140, 6433, 6, 4752, 10264, 7072, 3990, 309, 910, 9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264, 10281, 3869, -28007, 10764, 8974, 3745, 10269, 914, 8629, -26438, 26779, -15208, 8728, 2982, -25718, 918, 6842, -25030, -5462, -14833, -22386, 8, -22468, -27479, -11237, 21664, 45, -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990, -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457, 8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232, -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925, 1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124, 17935, 3218, 262, 5413, -27579, -25189, -26331, -28236, -28144, -23804, -23261, -23013, -19045, 5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446, 9647, -27504, -27586, -31695, 11142, 18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084, -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240, 10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833, 28967, -25290, 30866, 13466, -28403, -24022, -14042, -22472, -18166, 20493, -27626, -22266, -1784, -31473, 9612, 7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068, 22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222, 8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638, 8466, -25537 }, { 4540, 4529, 5674, 5667, 5785, 6802, 8072, 4562, 4437, 4317, 5896, 4488 } };

    @OriginalMember(owner = "client!um", name = "Q", descriptor = "[[S")
    private static short[][] field6817 = new short[][] { new short[0], new short[0], new short[0], new short[0], new short[0] };

    @OriginalMember(owner = "client!um", name = "V", descriptor = "[[S")
    private static short[][] field6821 = new short[][] { { 6798, 107, 10283, 16, 4797, 7744, 5799, 4634, -31839, 22433, 2983, -11343, 8, 5281, 10438, 3650, -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010 }, { 8741, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094, 10153, -8915, 4783, 1341, 16578, -30533, 25239, 8, 5281, 10438, 3650, -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010, 7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924, 8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859, -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673, 57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000, -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465, 8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220, -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226, 267, 5421, -27570, -25177, -26319, -28217, -28132, -23792, -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186, 10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965, -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028, 2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010, -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468, 9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640, 8472, -25529 }, { 25238, 8742, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094, 10153, -8915, 4783, 1341, 16578, -30533, 8, 5281, 10438, 3650, -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010, 7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924, 8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859, -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673, 57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000, -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465, 8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220, -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226, 267, 5421, -27570, -25177, -26319, -28217, -28132, -23792, -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186, 10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965, -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028, 2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010, -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468, 9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640, 8472, -25529 }, { 4626, 11146, 6439, 12, 4758, 10270, 7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026, 2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924, 8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859, -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673, 57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000, -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465, 8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220, -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933, 1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599, 9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226, 267, 5421, -27570, -25177, -26319, -28217, -28132, -23792, -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186, 10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687, 11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965, -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028, 2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010, -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468, 9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074, 22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230, 8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640, 8472, -25529 }, { 4550, 4537, 5681, 5673, 5790, 6806, 8076, 4574, 4444, 4328, 7052, 4490 } };

    @OriginalMember(owner = "client!um", name = "T", descriptor = "[[[S")
    public static short[][][] field6819 = new short[][][] { field6821, field6818, field6817 };

    @OriginalMember(owner = "client!um", name = "F", descriptor = "I")
    public static int field6806;

    @OriginalMember(owner = "client!um", name = "L", descriptor = "I")
    public static int field6812;

    @OriginalMember(owner = "client!um", name = "N", descriptor = "I")
    public static int field6814;

    @OriginalMember(owner = "client!um", name = "U", descriptor = "I")
    public static int field6820;

    @OriginalMember(owner = "client!um", name = "H", descriptor = "Ljn;")
    public static class668 field6808;

    @OriginalMember(owner = "client!um", name = "O", descriptor = "[Lio;")
    public static class404[] field6815;

    @OriginalMember(owner = "client!um", name = "<init>", descriptor = "()V")
    public class487() {
        super(0, true);
    }

    @OriginalMember(owner = "client!um", name = "a", descriptor = "(II)[I")
    public final int[] method359(int arg0, int arg1) {
        ++field6820;
        int[] var3 = super.field5140.method1564(arg0, true);
        int var4 = 7 % ((13 - arg1) / 40);
        if (super.field5140.field3482) {
            int var5 = class562.field8114[arg0] * this.field6816 + 2048;
            int var6 = var5 >> 12;
            int var7 = var6 + 1;
            for (int var8 = 0; ~class599.field8643 < ~var8; ++var8) {
                class556.field8044 = Integer.MAX_VALUE;
                class426.field6121 = Integer.MAX_VALUE;
                class353.field4721 = Integer.MAX_VALUE;
                class208.field2538 = Integer.MAX_VALUE;
                int var9 = class152.field1879[var8] * this.field6809 + 2048;
                int var10 = var9 >> 12;
                int var11 = var10 - -1;
                for (int var12 = var6 + -1; ~var7 <= ~var12; ++var12) {
                    int var14 = this.field6813[(this.field6816 <= var12 ? var12 - this.field6816 : var12) & 255] & 255;
                    for (int var15 = var10 + -1; var15 <= var11; ++var15) {
                        int var16 = (this.field6813[var14 + (~this.field6809 < ~var15 ? var15 : -this.field6809 + var15) & 255] & 255) * 2;
                        int var10000 = -(var15 << 12) + var9;
                        int var28 = var16 + 1;
                        int var17 = var10000 + -this.field6804[var16];
                        int var18 = var5 - ((var12 << 12) + this.field6804[var28]);
                        int var19 = this.field6807;
                        int var20;
                        if (var19 != 1) {
                            if (~var19 != -4) {
                                if (~var19 != -5) {
                                    if (var19 != 5) {
                                        if (var19 == 2) {
                                            var20 = (var18 < 0 ? -var18 : var18) + (~var17 > -1 ? -var17 : var17);
                                        } else {
                                            var20 = (int) (Math.sqrt((double) ((float) (var17 * var17 + var18 * var18) / 1.6777216E7F)) * 4096.0D);
                                        }
                                    } else {
                                        int var21 = var17 * var17;
                                        int var22 = var18 * var18;
                                        var20 = (int) (4096.0D * Math.sqrt(Math.sqrt((double) ((float) (var21 + var22) / 1.6777216E7F))));
                                    }
                                } else {
                                    int var23 = (int) (4096.0D * Math.sqrt((double) ((float) (~var17 > -1 ? -var17 : var17) / 4096.0F)));
                                    int var24 = (int) (4096.0D * Math.sqrt((double) ((float) (~var18 <= -1 ? var18 : -var18) / 4096.0F)));
                                    int var25 = var23 + var24;
                                    var20 = var25 * var25 >> 12;
                                }
                            } else {
                                int var26 = ~var17 <= -1 ? var17 : -var17;
                                int var27 = ~var18 > -1 ? -var18 : var18;
                                var20 = var27 < var26 ? var26 : var27;
                            }
                        } else {
                            var20 = var17 * var17 + var18 * var18 >> 12;
                        }
                        if (class208.field2538 > var20) {
                            class556.field8044 = class426.field6121;
                            class426.field6121 = class353.field4721;
                            class353.field4721 = class208.field2538;
                            class208.field2538 = var20;
                        } else if (class353.field4721 > var20) {
                            class556.field8044 = class426.field6121;
                            class426.field6121 = class353.field4721;
                            class353.field4721 = var20;
                        } else if (var20 < class426.field6121) {
                            class556.field8044 = class426.field6121;
                            class426.field6121 = var20;
                        } else if (var20 < class556.field8044) {
                            class556.field8044 = var20;
                        }
                    }
                }
                int var13 = this.field6805;
                if (var13 != 0) {
                    if (var13 != 1) {
                        if (var13 != 3) {
                            if (var13 != 4) {
                                if (~var13 == -3) {
                                    var3[var8] = -class208.field2538 + class353.field4721;
                                }
                            } else {
                                var3[var8] = class556.field8044;
                            }
                        } else {
                            var3[var8] = class426.field6121;
                        }
                    } else {
                        var3[var8] = class353.field4721;
                    }
                } else {
                    var3[var8] = class208.field2538;
                }
            }
        }
        return var3;
    }

    @OriginalMember(owner = "client!um", name = "b", descriptor = "(Z)V")
    private final void method2840(boolean arg0) {
        if (arg0) {
            this.method359(-11, -76);
        }
        ++field6806;
        Random var2 = new Random((long) this.field6810);
        this.field6804 = new short[512];
        if (~this.field6803 < -1) {
            for (int var3 = 0; ~var3 > -513; ++var3) {
                this.field6804[var3] = (short) class517.method3062(var2, 26100, this.field6803);
            }
        }
    }

    @OriginalMember(owner = "client!um", name = "a", descriptor = "(IBLun;)V")
    public final void method355(int arg0, byte arg1, class389 arg2) {
        ++field6814;
        if (arg0 != 0) {
            if (arg0 != 1) {
                if (arg0 != 2) {
                    if (~arg0 != -4) {
                        if (~arg0 != -5) {
                            if (arg0 != 5) {
                                if (~arg0 == -7) {
                                    this.field6816 = arg2.method2229(255);
                                }
                            } else {
                                this.field6809 = arg2.method2229(255);
                            }
                        } else {
                            this.field6807 = arg2.method2229(255);
                        }
                    } else {
                        this.field6805 = arg2.method2229(255);
                    }
                } else {
                    this.field6803 = arg2.method2260(-41);
                }
            } else {
                this.field6810 = arg2.method2229(255);
            }
        } else {
            this.field6809 = this.field6816 = arg2.method2229(255);
        }
        if (arg1 < 111) {
            field6817 = null;
        }
    }

    @OriginalMember(owner = "client!um", name = "a", descriptor = "(I)V")
    public final void method358(int arg0) {
        ++field6812;
        this.field6813 = class576.method3367(this.field6810, -126);
        this.method2840(false);
        if (arg0 <= 0) {
            field6819 = null;
        }
    }

    @OriginalMember(owner = "client!um", name = "e", descriptor = "(I)V")
    public static void method2841(int arg0) {
        field6811 = null;
        field6808 = null;
        field6818 = null;
        field6821 = null;
        int var1 = 49 % ((72 - arg0) / 34);
        field6817 = null;
        field6819 = null;
        field6815 = null;
    }
}
