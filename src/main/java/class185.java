import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!rg")
public class class185 extends class106 {

    @OriginalMember(owner = "client!rg", name = "s", descriptor = "[B")
    public byte[] field3315;

    @OriginalMember(owner = "client!rg", name = "r", descriptor = "[[S")
    public static short[][] field3314 = new short[][] { { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191, 949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20366, 20401, 662, 827, 7054, 5056, -21734, -21564, -14444, -15424, 11032, 11200, 4, 123, 61, -18792, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 8412, 8301, 8076, 6936, 5675, 941, 5056, 15795, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!rg", name = "q", descriptor = "Loc;")
    public static class151 field3313 = class137.method873(2, "overlay)3dat");

    @OriginalMember(owner = "client!rg", name = "t", descriptor = "[S")
    public static short[] field3316 = new short[500];

    @OriginalMember(owner = "client!rg", name = "u", descriptor = "Loc;")
    public static class151 field3317 = class137.method873(2, "::rect_debug");

    @OriginalMember(owner = "client!rg", name = "v", descriptor = "Loc;")
    public static class151 field3318 = class137.method873(2, "(U3");

    @OriginalMember(owner = "client!rg", name = "x", descriptor = "I")
    public static int field3320;

    @OriginalMember(owner = "client!rg", name = "w", descriptor = "[[[B")
    public static byte[][][] field3319;

    @OriginalMember(owner = "client!rg", name = "a", descriptor = "(IIIZI)V")
    public static final void method1150(int arg0, int arg1, int arg2, boolean arg3, int arg4) {
        field3320++;
        class221.method1386(arg4, arg2, arg1 + arg4, arg0 + arg2);
        class61.method404();
        class116.field2080++;
        class182.method1144(17782, true);
        class22.method189(116, true);
        class182.method1144(17782, false);
        class22.method189(105, arg3);
        class161.method1044((byte) 69);
        class81.method519(-98);
        if (!class89.field1622) {
            int var5 = class94.field1761 + class178.field3222 & 0x7FF;
            int var6 = class58.field1157;
            if (class148.field2648 / 256 > var6) {
                var6 = class148.field2648 / 256;
            }
            if (class19.field411[4] && var6 < class235.field4358[4] + 128) {
                var6 = class235.field4358[4] + 128;
            }
            class194.method1219(class15.field344, 28646, class195.method1225(class228.field3975.field3976, class234.field4325, class228.field3975.field4029, (byte) -118) - 50, var6, var5, class22.field492, var6 * 3 + 600);
        }
        int var7;
        if (class89.field1622) {
            var7 = class14.method121(1104594311);
        } else {
            var7 = class13.method115(true);
        }
        int var8 = class90.field1650;
        int var9 = class113.field2011;
        int var10 = class181.field3267;
        int var11 = class37.field779;
        int var12 = class147.field2640;
        for (int var13 = 0; var13 < 5; var13++) {
            if (class19.field411[var13]) {
                int var16 = (int) ((double) -class140.field2552[var13] + Math.random() * (double) (class140.field2552[var13] * 2 + 1) + Math.sin((double) class59.field1168[var13] / 100.0D * (double) class113.field2023[var13]) * (double) class235.field4358[var13]);
                if (var13 == 0) {
                    class90.field1650 += var16;
                }
                if (var13 == 4) {
                    class37.field779 += var16;
                    if (class37.field779 < 128) {
                        class37.field779 = 128;
                    }
                    if (class37.field779 > 383) {
                        class37.field779 = 383;
                    }
                }
                if (var13 == 2) {
                    class181.field3267 += var16;
                }
                if (var13 == 3) {
                    class147.field2640 = class147.field2640 + var16 & 0x7FF;
                }
                if (var13 == 1) {
                    class113.field2011 += var16;
                }
            }
        }
        int var14 = class57.field1149;
        int var15 = class41.field857;
        if (arg4 <= var14 && arg1 + arg4 > var14 && var15 >= arg2 && var15 < arg0 + arg2) {
            class71.field1386 = 0;
            class19.field394 = true;
            class40.field836 = class41.field857 - arg2;
            class208.field3660 = class57.field1149 - arg4;
        } else {
            class19.field394 = false;
            class71.field1386 = 0;
        }
        class16.method131(-11903);
        class221.method1375(arg4, arg2, arg1, arg0, 0);
        class51.method354(class90.field1650, class113.field2011, class181.field3267, class37.field779, class147.field2640, var7);
        class16.method131(-11903);
        class190.method1180();
        class32.method234(arg1, arg4, (byte) -78, arg0, arg2);
        class111.method670((byte) 121, arg4, arg2);
        ((class68) class61.field1198).method463(class181.field3273, -21679);
        class188.method1163(arg0, (byte) 60, arg4, arg2, arg1);
        class90.field1650 = var8;
        class37.field779 = var11;
        class181.field3267 = var10;
        class147.field2640 = var12;
        class113.field2011 = var9;
        if (class44.field909 && class188.method1167(true, 0, false) == 0) {
            class44.field909 = false;
        }
        if (class44.field909) {
            class221.method1375(arg4, arg2, arg1, arg0, 0);
            class192.method1207(class190.field3365, false, 255);
        }
        if (!class44.field909 && !class225.field3917 && arg4 <= var14 && arg1 + arg4 > var14 && arg2 <= var15 && arg0 + arg2 > var15) {
            class133.method820(arg2, var14, var15, arg4, 17208);
        }
    }

    @OriginalMember(owner = "client!rg", name = "b", descriptor = "(I)V")
    public static void method1151(int arg0) {
        field3316 = null;
        if (arg0 != 7054) {
            return;
        }
        field3318 = null;
        field3319 = null;
        field3314 = null;
        field3317 = null;
        field3313 = null;
    }

    @OriginalMember(owner = "client!rg", name = "<init>", descriptor = "([B)V")
    public class185(byte[] arg0) {
        this.field3315 = arg0;
    }
}
