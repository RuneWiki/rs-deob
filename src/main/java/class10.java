import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!l")
public class class10 {

    @OriginalMember(owner = "client!l", name = "d", descriptor = "[I")
    public static int[] field149 = new int[2000];

    @OriginalMember(owner = "client!l", name = "g", descriptor = "Lma;")
    public static class5 field152 = class12.method119("", (byte) 118);

    @OriginalMember(owner = "client!l", name = "c", descriptor = "[I")
    public static int[] field148 = new int[4096];

    @OriginalMember(owner = "client!l", name = "h", descriptor = "I")
    public static int field153;

    @OriginalMember(owner = "client!l", name = "i", descriptor = "[[S")
    public static short[][] field154;

    @OriginalMember(owner = "client!l", name = "j", descriptor = "Lma;")
    public static class5 field155;

    @OriginalMember(owner = "client!l", name = "k", descriptor = "Lma;")
    public static class5 field156;

    @OriginalMember(owner = "client!l", name = "l", descriptor = "I")
    public static int field157;

    @OriginalMember(owner = "client!l", name = "a", descriptor = "I")
    public static int field146;

    @OriginalMember(owner = "client!l", name = "b", descriptor = "I")
    public static int field147;

    @OriginalMember(owner = "client!l", name = "e", descriptor = "I")
    public static int field150;

    @OriginalMember(owner = "client!l", name = "f", descriptor = "I")
    public static int field151;

    @OriginalMember(owner = "client!l", name = "a", descriptor = "(ZI)I", line = 12)
    public static final int method104(boolean arg0, int arg1) {
        if (arg0) {
            field148 = (int[]) null;
        }
        field147++;
        return arg1 & 0x7F;
    }

    @OriginalMember(owner = "client!l", name = "a", descriptor = "(BIIII)V", line = 74)
    public static final void method105(byte arg0, int arg1, int arg2, int arg3, int arg4) {
        field146++;
        class255 var5 = (class255) class300.field5062.method1372(false, (long) arg3);
        if (var5 == null) {
            var5 = new class255();
            class300.field5062.method1376((long) arg3, arg0 ^ 0xFFFFFFCF, var5);
        }
        if (arg1 >= var5.field4355.length) {
            int[] var6 = new int[arg1 + 1];
            int[] var7 = new int[arg1 + 1];
            for (int var8 = 0; var8 < var5.field4355.length; var8++) {
                var6[var8] = var5.field4355[var8];
                var7[var8] = var5.field4360[var8];
            }
            for (int var9 = var5.field4355.length; var9 < arg1; var9++) {
                var6[var9] = -1;
                var7[var9] = 0;
            }
            var5.field4355 = var6;
            var5.field4360 = var7;
        }
        var5.field4355[arg1] = arg2;
        if (arg0 == 48) {
            var5.field4360[arg1] = arg4;
        }
    }

    @OriginalMember(owner = "client!l", name = "a", descriptor = "(Lnc;I)V", line = 132)
    public static final void method106(class12 arg0, int arg1) {
        field151++;
        arg0.field225 = false;
        if (arg0.field173 != -1) {
            class33 var2 = class171.method1136(arg0.field173, -6722);
            if (var2 == null || var2.field529 == null) {
                arg0.field173 = -1;
            } else {
                arg0.field182++;
                if (arg0.field237 < var2.field529.length && arg0.field182 > var2.field502[arg0.field237]) {
                    arg0.field237++;
                    arg0.field182 = 1;
                    class272.method1859(arg0.field178, arg0.field211, 64, arg0.field237, var2, class151.field2183 == arg0);
                }
                if (var2.field529.length <= arg0.field237) {
                    arg0.field182 = 0;
                    arg0.field237 = 0;
                    class272.method1859(arg0.field178, arg0.field211, 64, arg0.field237, var2, class151.field2183 == arg0);
                }
            }
        }
        if (arg0.field222 != -1 && class50.field784 >= arg0.field199) {
            int var3 = class57.method430(arg0.field222, 22867872).field753;
            if (var3 == -1) {
                arg0.field222 = -1;
            } else {
                class33 var4 = class171.method1136(var3, arg1 - 29618);
                if (var4 == null || var4.field529 == null) {
                    arg0.field222 = -1;
                } else {
                    if (arg0.field236 < 0) {
                        arg0.field236 = 0;
                        class272.method1859(arg0.field178, arg0.field211, 64, 0, var4, class151.field2183 == arg0);
                    }
                    arg0.field195++;
                    if (arg0.field236 < var4.field529.length && var4.field502[arg0.field236] < arg0.field195) {
                        arg0.field236++;
                        arg0.field195 = 1;
                        class272.method1859(arg0.field178, arg0.field211, 64, arg0.field236, var4, class151.field2183 == arg0);
                    }
                    if (arg0.field236 >= var4.field529.length) {
                        arg0.field222 = -1;
                    }
                }
            }
        }
        if (arg1 != 22896) {
            method106((class12) null, -87);
        }
        if (arg0.field238 != -1 && arg0.field214 <= 1) {
            class33 var5 = class171.method1136(arg0.field238, -6722);
            if (var5.field526 == 1 && arg0.field172 > 0 && arg0.field198 <= class50.field784 && class50.field784 > arg0.field231) {
                arg0.field214 = 1;
                return;
            }
        }
        if (arg0.field238 != -1 && arg0.field214 == 0) {
            class33 var6 = class171.method1136(arg0.field238, -6722);
            if (var6 == null || var6.field529 == null) {
                arg0.field238 = -1;
            } else {
                arg0.field232++;
                if (var6.field529.length > arg0.field221 && var6.field502[arg0.field221] < arg0.field232) {
                    arg0.field232 = 1;
                    arg0.field221++;
                    class272.method1859(arg0.field178, arg0.field211, arg1 - 22832, arg0.field221, var6, class151.field2183 == arg0);
                }
                if (arg0.field221 >= var6.field529.length) {
                    arg0.field216++;
                    arg0.field221 -= var6.field513;
                    if (var6.field500 <= arg0.field216) {
                        arg0.field238 = -1;
                    } else if (arg0.field221 >= 0 && arg0.field221 < var6.field529.length) {
                        class272.method1859(arg0.field178, arg0.field211, arg1 - 22832, arg0.field221, var6, class151.field2183 == arg0);
                    } else {
                        arg0.field238 = -1;
                    }
                }
                arg0.field225 = var6.field506;
            }
        }
        if (arg0.field214 > 0) {
            arg0.field214--;
        }
    }

    @OriginalMember(owner = "client!l", name = "a", descriptor = "(ILma;)V", line = 285)
    public static final void method107(int arg0, class5 arg1) {
        if (arg0 != -13280) {
            method108(69);
        }
        field150++;
        if (class231.field3844 == null) {
            return;
        }
        int var2 = 0;
        long var3 = arg1.method69(-49);
        if (var3 == 0L) {
            return;
        }
        while (var2 < class231.field3844.length && class231.field3844[var2].field5004 != var3) {
            var2++;
        }
        if (class231.field3844.length > var2 && class231.field3844[var2] != null) {
            class174.field2657++;
            class147.field2127.method1389((byte) 123, 150);
            class147.field2127.method1548(false, class231.field3844[var2].field5004);
        }
    }

    static {
        for (int var0 = 0; var0 < 4096; var0++) {
            field148[var0] = class234.method1660((byte) -106, var0);
        }
        field153 = 0;
        field154 = new short[][] { { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191, 949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 } };
        field155 = class12.method119("<col=00ff80>", (byte) 53);
        field156 = class12.method119("T", (byte) 93);
        field157 = 0;
    }

    @OriginalMember(owner = "client!l", name = "a", descriptor = "(I)V", line = 362)
    public static void method108(int arg0) {
        if (arg0 != -18747) {
            return;
        }
        field148 = null;
        field156 = null;
        field152 = null;
        field155 = null;
        field149 = null;
        field154 = (short[][]) null;
    }
}
