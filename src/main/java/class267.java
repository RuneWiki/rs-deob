import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!eo")
public class class267 extends class61 {

    @OriginalMember(owner = "client!eo", name = "x", descriptor = "B")
    public byte field3856 = 5;

    @OriginalMember(owner = "client!eo", name = "s", descriptor = "I")
    public static int field3851 = 0;

    @OriginalMember(owner = "client!eo", name = "y", descriptor = "Ljava/lang/String;")
    public static String field3857 = "Loaded interfaces";

    @OriginalMember(owner = "client!eo", name = "v", descriptor = "I")
    public static int field3854 = 0;

    @OriginalMember(owner = "client!eo", name = "E", descriptor = "[[S")
    public static short[][] field3863 = new short[][] { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 } };

    @OriginalMember(owner = "client!eo", name = "p", descriptor = "I")
    public static int field3848;

    @OriginalMember(owner = "client!eo", name = "q", descriptor = "I")
    public int field3849;

    @OriginalMember(owner = "client!eo", name = "r", descriptor = "I")
    public static int field3850;

    @OriginalMember(owner = "client!eo", name = "t", descriptor = "I")
    public int field3852;

    @OriginalMember(owner = "client!eo", name = "u", descriptor = "I")
    public int field3853;

    @OriginalMember(owner = "client!eo", name = "w", descriptor = "I")
    public static int field3855;

    @OriginalMember(owner = "client!eo", name = "z", descriptor = "I")
    public static int field3858;

    @OriginalMember(owner = "client!eo", name = "B", descriptor = "I")
    public int field3860;

    @OriginalMember(owner = "client!eo", name = "C", descriptor = "I")
    public int field3861;

    @OriginalMember(owner = "client!eo", name = "D", descriptor = "I")
    public int field3862;

    @OriginalMember(owner = "client!eo", name = "A", descriptor = "Lcq;")
    public static class67 field3859;

    @OriginalMember(owner = "client!eo", name = "a", descriptor = "(ZIILps;I)V")
    public static final void method1823(boolean arg0, int arg1, int arg2, class394 arg3, int arg4) {
        field3858++;
        if (arg1 != 2) {
            method1826((byte) 16);
        }
        int var5 = arg3.field5773;
        if (arg3.field5725 == 0) {
            arg3.field5773 = arg3.field5813;
        } else if (arg3.field5725 == 1) {
            arg3.field5773 = arg2 - arg3.field5813;
        } else if (arg3.field5725 == 2) {
            arg3.field5773 = arg3.field5813 * arg2 >> 14;
        } else if (arg3.field5725 == 3) {
            if (arg3.field5671 == 2) {
                arg3.field5773 = (arg3.field5813 - 1) * arg3.field5636 + arg3.field5813 * 32;
            } else if (arg3.field5671 == 7) {
                arg3.field5773 = (arg3.field5813 - 1) * arg3.field5636 + arg3.field5813 * 115;
            }
        }
        int var6 = arg3.field5672;
        if (arg3.field5719 == 0) {
            arg3.field5672 = arg3.field5670;
        } else if (arg3.field5719 == 1) {
            arg3.field5672 = arg4 - arg3.field5670;
        } else if (arg3.field5719 == 2) {
            arg3.field5672 = arg3.field5670 * arg4 >> 14;
        } else if (arg3.field5719 == 3) {
            if (arg3.field5671 == 2) {
                arg3.field5672 = arg3.field5670 * 32 + ((arg3.field5670 - 1) * arg3.field5751);
            } else if (arg3.field5671 == 7) {
                arg3.field5672 = (arg3.field5670 - 1) * arg3.field5751 + arg3.field5670 * 12;
            }
        }
        if (arg3.field5725 == 4) {
            arg3.field5773 = arg3.field5672 * arg3.field5655 / arg3.field5740;
        }
        if (arg3.field5719 == 4) {
            arg3.field5672 = arg3.field5773 * arg3.field5740 / arg3.field5655;
        }
        if (class62.field818 && (client.method1544(arg3).field4475 != 0 || arg3.field5671 == 0)) {
            if (arg3.field5672 < 5 && arg3.field5773 < 5) {
                arg3.field5773 = 5;
                arg3.field5672 = 5;
            } else {
                if (arg3.field5773 <= 0) {
                    arg3.field5773 = 5;
                }
                if (arg3.field5672 <= 0) {
                    arg3.field5672 = 5;
                }
            }
        }
        if (arg3.field5654 == 1337) {
            class393.field5624 = arg3;
        }
        if (arg0 && arg3.field5818 != null && arg3.field5773 != var5 || arg3.field5672 != var6) {
            class192 var7 = new class192();
            var7.field2566 = arg3;
            var7.field2578 = arg3.field5818;
            class234.field3126.method330(var7, arg1 ^ 0x80FDF1A2);
        }
    }

    @OriginalMember(owner = "client!eo", name = "e", descriptor = "(I)V")
    public static final void method1824(int arg0) {
        class129.field1787.method1136((byte) -68);
        if (arg0 == 14646) {
            field3855++;
            class188.field2524.method1136((byte) -67);
        }
    }

    @OriginalMember(owner = "client!eo", name = "a", descriptor = "(Ljava/lang/String;I)V")
    public static final void method1825(String arg0, int arg1) {
        field3850++;
        if (arg0 == null) {
            return;
        }
        if (!(class167.field2254 < 100 || class317.field4638) || class167.field2254 >= 200) {
            class197.method1175(0, class298.field4321);
            return;
        }
        String var2 = class397.method2555(2289, arg0);
        if (var2 == null) {
            return;
        }
        for (int var3 = 0; var3 < class167.field2254; var3++) {
            String var7 = class397.method2555(arg1 - 18841, class272.field3943[var3]);
            if (var7 != null && var7.equals(var2)) {
                class197.method1175(arg1 - 21130, arg0 + class396.field5866);
                return;
            }
            if (class148.field2037[var3] != null) {
                String var8 = class397.method2555(2289, class148.field2037[var3]);
                if (var8 != null && var8.equals(var2)) {
                    class197.method1175(0, arg0 + class396.field5866);
                    return;
                }
            }
        }
        for (int var4 = 0; var4 < class318.field4649; var4++) {
            String var5 = class397.method2555(arg1 ^ 0x5A7B, class212.field2840[var4]);
            if (var5 != null && var5.equals(var2)) {
                class197.method1175(0, class451.field6585 + arg0 + class319.field4660);
                return;
            }
            if (class307.field4520[var4] != null) {
                String var6 = class397.method2555(arg1 - 18841, class307.field4520[var4]);
                if (var6 != null && var6.equals(var2)) {
                    class197.method1175(0, class451.field6585 + arg0 + class319.field4660);
                    return;
                }
            }
        }
        if (class397.method2555(2289, class227.field2988.field340).equals(var2)) {
            class197.method1175(arg1 ^ 0x528A, class105.field1524);
            return;
        }
        class177.field2345++;
        if (arg1 != 21130) {
            field3857 = null;
        }
        class185.field2507.method5(arg1 - 27575, 99);
        class185.field2507.method1346(class125.method795(arg1 - 21246, arg0), 32767);
        class185.field2507.method1380(65280, arg0);
    }

    @OriginalMember(owner = "client!eo", name = "b", descriptor = "(B)V")
    public static final void method1826(byte arg0) {
        field3848++;
        if (class61.field803 == 2) {
            return;
        }
        if (arg0 > -122) {
            method1823(false, 6, -118, (class394) null, -86);
        }
        try {
            class421.method2690(class328.field4784, "tbrefresh", -27444);
        } catch (Throwable var1) {
        }
    }

    @OriginalMember(owner = "client!eo", name = "c", descriptor = "(B)V")
    public static void method1827(byte arg0) {
        field3857 = null;
        if (arg0 == -60) {
            field3863 = null;
            field3859 = null;
        }
    }
}
