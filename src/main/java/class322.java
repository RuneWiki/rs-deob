import java.lang.reflect.Field;
import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!dh")
public class class322 extends class362 {

    @OriginalMember(owner = "client!dh", name = "qb", descriptor = "Lsj;")
    private class460 field4466;

    @OriginalMember(owner = "client!dh", name = "u", descriptor = "Lrc;")
    private class538 field4418;

    @OriginalMember(owner = "client!dh", name = "sb", descriptor = "Leea;")
    public class134 field4468;

    @OriginalMember(owner = "client!dh", name = "r", descriptor = "[[S")
    private static short[][] field4415 = new short[][] { { 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906 }, { 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906 }, { 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906 }, { 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 13756, 13735, 13716, 13880, 13733, 13842, 17592, 18595, 21650, 23990, 24987, 24078, 27962, 25893, 26894, 27183, 27165, 27146, 30010, 28965, 29966, 12472, 13475, 10382, 10682, 10659, 10766, 6707, 6685, 7820, 6961, 6941, 5900, 3379, 3359, 3346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4296, 3290, 3299, 3260, 4502, 4378, 4383, 5289, 7618, 7380, 8408, 7492, 82, 119, 107, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 8, 22, 40, 60, 80, 100, 300, 674, 694, 546, 930, 950, 6444, 6942, 6962, 2348, 2722, 2742, 10540, 10914, 10934, 10300, 10546, 10566, 14636, 15010, 15030, 19756, 20130, 20150, -29396, -29022, -29002, 31020, 31266, 31286, -24276, -23902, -23882, -19156, -18782, -18762, -14036, -13662, -13642, -6868, -6494, -6474, 518, 534, 6790, 6806, 11014, 11030, 14982, 14998, 21126, 21142, -28922, -28906, -22010, -21994, -12922, -12906, 10337, 10572, 10419, 10397, 10349, 8404, 9530, 10446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!dh", name = "O", descriptor = "[[S")
    private static short[][] field4438 = new short[][] { { 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910 }, { 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910 }, { 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910 }, { 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 13751, 13730, 13711, 13875, 13728, 13837, 17587, 18590, 21645, 23985, 24982, 24073, 27957, 25888, 26889, 27178, 27160, 27141, 30005, 28960, 29961, 12467, 13470, 10377, 10677, 10654, 10761, 6702, 6680, 7815, 6956, 6936, 5895, 3374, 3354, 3341, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4294, 3288, 3297, 3258, 4500, 4376, 4381, 5287, 7616, 7378, 8406, 7490, 80, 117, 105, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 7, 18, 35, 55, 75, 95, 295, 669, 689, 541, 925, 945, 6439, 6937, 6957, 2343, 2717, 2737, 10535, 10909, 10929, 10295, 10541, 10561, 14631, 15005, 15025, 19751, 20125, 20145, -29401, -29027, -29007, 31015, 31261, 31281, -24281, -23907, -23887, -19161, -18787, -18767, -14041, -13667, -13647, -6873, -6499, -6479, 516, 530, 6788, 6802, 11012, 11026, 14980, 14994, 21124, 21138, -28924, -28910, -22012, -21998, -12924, -12910, 10332, 10567, 10414, 10392, 10344, 8399, 9525, 10441, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!dh", name = "w", descriptor = "[[S")
    private static short[][] field4420 = new short[][] { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!dh", name = "ob", descriptor = "I")
    public static int field4464 = 0;

    @OriginalMember(owner = "client!dh", name = "Z", descriptor = "I")
    public static int field4449 = 0;

    @OriginalMember(owner = "client!dh", name = "pb", descriptor = "[[S")
    private static short[][] field4465 = new short[][] { { 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902 }, { 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902 }, { 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902 }, { 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 13761, 13740, 13721, 13885, 13738, 13847, 17597, 18600, 21655, 23995, 24992, 24083, 27967, 25898, 26899, 27188, 27170, 27151, 30015, 28970, 29971, 12477, 13480, 10387, 10687, 10664, 10771, 6712, 6690, 7825, 6966, 6946, 5905, 3384, 3364, 3351, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 4298, 3292, 3301, 3262, 4504, 4380, 4385, 5291, 7620, 7382, 8410, 7494, 84, 121, 109, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 9, 26, 45, 65, 85, 105, 305, 679, 699, 551, 935, 955, 6449, 6947, 6967, 2353, 2727, 2747, 10545, 10919, 10939, 10305, 10551, 10571, 14641, 15015, 15035, 19761, 20135, 20166, -29380, -29017, -28997, 31025, 31271, 31291, -24271, -23897, -23877, -19151, -18777, -18757, -14031, -13657, -13637, -6863, -6489, -6469, 520, 538, 6792, 6810, 11016, 11034, 14984, 15002, 21128, 21146, -28920, -28902, -22008, -21990, -12920, -12902, 10342, 10577, 10424, 10402, 10354, 8409, 9535, 10451, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!dh", name = "jb", descriptor = "[[[S")
    public static short[][][] field4459 = new short[][][] { field4420, field4465, field4415, field4438 };

    @OriginalMember(owner = "client!dh", name = "q", descriptor = "I")
    public static int field4414;

    @OriginalMember(owner = "client!dh", name = "s", descriptor = "I")
    public static int field4416;

    @OriginalMember(owner = "client!dh", name = "y", descriptor = "I")
    public static int field4422;

    @OriginalMember(owner = "client!dh", name = "G", descriptor = "I")
    public static int field4430;

    @OriginalMember(owner = "client!dh", name = "K", descriptor = "I")
    public static int field4434;

    @OriginalMember(owner = "client!dh", name = "M", descriptor = "I")
    public static int field4436;

    @OriginalMember(owner = "client!dh", name = "P", descriptor = "I")
    public static int field4439;

    @OriginalMember(owner = "client!dh", name = "R", descriptor = "I")
    public static int field4441;

    @OriginalMember(owner = "client!dh", name = "fb", descriptor = "I")
    public static int field4455;

    @OriginalMember(owner = "client!dh", name = "nb", descriptor = "I")
    public static int field4463;

    @OriginalMember(owner = "client!dh", name = "t", descriptor = "Lkba;")
    public class107 field4417;

    @OriginalMember(owner = "client!dh", name = "C", descriptor = "Lfv;")
    public class123 field4426;

    @OriginalMember(owner = "client!dh", name = "Y", descriptor = "Leea;")
    public class134 field4448;

    @OriginalMember(owner = "client!dh", name = "U", descriptor = "Lsba;")
    public class218 field4444;

    @OriginalMember(owner = "client!dh", name = "db", descriptor = "Lmm;")
    public class280 field4453;

    @OriginalMember(owner = "client!dh", name = "p", descriptor = "Lvca;")
    public class282 field4413;

    @OriginalMember(owner = "client!dh", name = "V", descriptor = "Lvca;")
    public class282 field4445;

    @OriginalMember(owner = "client!dh", name = "B", descriptor = "Lgga;")
    public class294 field4425;

    @OriginalMember(owner = "client!dh", name = "T", descriptor = "Laj;")
    public class315 field4443;

    @OriginalMember(owner = "client!dh", name = "L", descriptor = "Lmca;")
    public class31 field4435;

    @OriginalMember(owner = "client!dh", name = "rb", descriptor = "Lvu;")
    public class339 field4467;

    @OriginalMember(owner = "client!dh", name = "X", descriptor = "Lpp;")
    public class394 field4447;

    @OriginalMember(owner = "client!dh", name = "lb", descriptor = "Lpp;")
    public class394 field4461;

    @OriginalMember(owner = "client!dh", name = "kb", descriptor = "Lti;")
    public class442 field4460;

    @OriginalMember(owner = "client!dh", name = "x", descriptor = "Lpr;")
    public class448 field4421;

    @OriginalMember(owner = "client!dh", name = "F", descriptor = "Lod;")
    public class507 field4429;

    @OriginalMember(owner = "client!dh", name = "cb", descriptor = "Lfo;")
    public class518 field4452;

    @OriginalMember(owner = "client!dh", name = "ib", descriptor = "Lfo;")
    public class518 field4458;

    @OriginalMember(owner = "client!dh", name = "D", descriptor = "Lfs;")
    public class555 field4427;

    @OriginalMember(owner = "client!dh", name = "N", descriptor = "Lkfa;")
    public class602 field4437;

    @OriginalMember(owner = "client!dh", name = "v", descriptor = "Ljaa;")
    public class615 field4419;

    @OriginalMember(owner = "client!dh", name = "A", descriptor = "Lmfa;")
    public class616 field4424;

    @OriginalMember(owner = "client!dh", name = "bb", descriptor = "Lmfa;")
    public class616 field4451;

    @OriginalMember(owner = "client!dh", name = "gb", descriptor = "Ltl;")
    public class620 field4456;

    @OriginalMember(owner = "client!dh", name = "z", descriptor = "Lkia;")
    public class621 field4423;

    @OriginalMember(owner = "client!dh", name = "Q", descriptor = "Lav;")
    public class640 field4440;

    @OriginalMember(owner = "client!dh", name = "J", descriptor = "Lph;")
    public class644 field4433;

    @OriginalMember(owner = "client!dh", name = "E", descriptor = "Lbl;")
    public class650 field4428;

    @OriginalMember(owner = "client!dh", name = "mb", descriptor = "Lpb;")
    public class656 field4462;

    @OriginalMember(owner = "client!dh", name = "ab", descriptor = "Lwca;")
    public class677 field4450;

    @OriginalMember(owner = "client!dh", name = "o", descriptor = "Lfca;")
    public class85 field4412;

    @OriginalMember(owner = "client!dh", name = "H", descriptor = "Lfca;")
    public class85 field4431;

    @OriginalMember(owner = "client!dh", name = "S", descriptor = "Lfca;")
    public class85 field4442;

    @OriginalMember(owner = "client!dh", name = "hb", descriptor = "Lfca;")
    public class85 field4457;

    @OriginalMember(owner = "client!dh", name = "tb", descriptor = "Lfca;")
    public class85 field4469;

    @OriginalMember(owner = "client!dh", name = "eb", descriptor = "Ltt;")
    public class93 field4454;

    @OriginalMember(owner = "client!dh", name = "I", descriptor = "Ldba;")
    public class94 field4432;

    // $FF: synthetic field
    @OriginalMember(owner = "client!dh", name = "ub", descriptor = "Ljava/lang/Class;")
    public static Class field4470;

    @OriginalMember(owner = "client!dh", name = "W", descriptor = "[Luj;")
    public static class385[] field4446;

    // $FF: synthetic method
    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(Ljava/lang/String;)Ljava/lang/Class;", line = 1)
    public static Class method2067(String arg0) {
        try {
            return Class.forName(arg0);
        } catch (ClassNotFoundException var2) {
            throw new NoClassDefFoundError(var2.getMessage());
        }
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(ILcea;I)V", line = 24)
    private final void method2057(int arg0, class215 arg1, int arg2) {
        this.field4429 = new class507(arg1.method1535(255), this);
        field4430++;
        this.field4452 = new class518(arg1.method1535(arg0 ^ 0x7860), this);
        this.field4447 = new class394(arg1.method1535(255) + 1, this);
        this.field4417 = new class107(arg1.method1535(255), this);
        this.field4425 = new class294(arg1.method1535(arg0 ^ 0x7860), this);
        this.field4433 = new class644(arg1.method1535(255), this);
        this.field4443 = new class315(arg1.method1535(255), this);
        arg1.method1535(arg0 ^ 0x7860);
        this.field4467 = new class339(arg1.method1535(255), this);
        int var4 = arg1.method1535(arg0 ^ 0x7860);
        int var5 = 0;
        if (arg2 >= 17) {
            var5 = arg1.method1535(255);
        }
        this.field4435 = new class31(var5 < var4 ? var4 : var5, this);
        boolean var6 = true;
        boolean var7 = true;
        boolean var8;
        if (arg2 >= 2) {
            var8 = arg1.method1535(arg0 - 30624) == 1;
            if (arg2 >= 17) {
                var7 = arg1.method1535(255) == 1;
            }
        } else {
            var8 = arg1.method1535(255) == 1;
            arg1.method1535(255);
        }
        this.field4427 = new class555((var8 | var7) ? 1 : 0, this);
        this.field4456 = new class620(arg1.method1535(255), this);
        this.field4444 = new class218(arg1.method1535(arg0 ^ 0x7860), this);
        this.field4413 = new class282(arg1.method1535(255), this);
        this.field4437 = new class602(arg1.method1535(255), this);
        this.field4469 = new class85(arg1.method1535(arg0 - 30624), this);
        if (arg2 >= 20) {
            this.field4412 = new class85(arg1.method1535(255), this);
        } else {
            this.field4412 = new class85(this.field4469.method820(-32350), this);
        }
        this.field4457 = new class85(arg1.method1535(255), this);
        this.field4431 = new class85(arg1.method1535(255), this);
        if (arg2 >= 21) {
            this.field4442 = new class85(arg1.method1535(255), this);
        } else {
            this.field4442 = new class85(this.field4457.method820(-32350), this);
        }
        if (arg2 >= 1) {
            arg1.method1478(842397944);
            arg1.method1478(842397944);
        }
        if (arg2 >= 3 && arg2 < 6) {
            arg1.method1535(255);
        }
        if (arg2 >= 4) {
            this.field4421 = new class448(arg1.method1535(255), this);
        }
        if (arg0 != 30879) {
            this.method2064((byte) -10);
        }
        arg1.method1533((byte) -126);
        if (arg2 >= 6) {
            this.field4424 = new class616(arg1.method1535(arg0 ^ 0x7860), this);
        }
        if (arg2 >= 7) {
            this.field4462 = new class656(arg1.method1535(255), this);
        }
        if (arg2 >= 8) {
            arg1.method1535(255);
        }
        if (arg2 >= 9) {
            this.field4423 = new class621(arg1.method1535(arg0 ^ 0x7860), this);
        }
        if (arg2 >= 10) {
            this.field4440 = new class640(arg1.method1535(255), this);
        }
        if (arg2 >= 11) {
            this.field4450 = new class677(arg1.method1535(255), this);
        }
        if (arg2 >= 12) {
            this.field4433 = new class644(arg1.method1535(255), this);
        }
        if (arg2 >= 13) {
            this.field4453 = new class280(arg1.method1535(255), this);
        }
        if (arg2 >= 14) {
            this.field4448 = new class134(arg1.method1535(255), this);
        }
        if (arg2 >= 15) {
            this.field4460 = new class442(arg1.method1535(255), this);
        }
        if (arg2 >= 16) {
            this.field4432 = new class94(arg1.method1535(arg0 ^ 0x7860), this);
        }
        if (arg2 >= 18) {
            this.field4426 = new class123(arg1.method1535(255), this);
        }
        if (arg2 >= 19) {
            this.field4428 = new class650(arg1.method1535(255), this);
        }
        if (arg2 >= 22) {
            this.field4454 = new class93(arg1.method1535(255), this);
        }
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(I)Lsj;", line = 166)
    public final class460 method2058(int arg0) {
        field4455++;
        if (arg0 != 674) {
            this.method2061(45);
        }
        return this.field4466;
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(ZI)V", line = 181)
    private final void method2059(boolean arg0, int arg1) {
        if (arg0 || this.field4413 == null) {
            this.field4413 = new class282(this);
        }
        field4439++;
        if (arg0 || this.field4445 == null) {
            this.field4445 = new class282(this.field4413.method1857(arg1 - 63636), this);
        }
        if (arg0 || this.field4440 == null) {
            this.field4440 = new class640(this);
        }
        if (arg0 || this.field4429 == null) {
            this.field4429 = new class507(this);
        }
        if (arg0 || this.field4423 == null) {
            this.field4423 = new class621(this);
        }
        if (arg0 || this.field4443 == null) {
            this.field4443 = new class315(this);
        }
        if (arg0 || this.field4444 == null) {
            this.field4444 = new class218(this);
        }
        if (arg0 || this.field4453 == null) {
            this.field4453 = new class280(this);
        }
        if (arg0 || this.field4417 == null) {
            this.field4417 = new class107(this);
        }
        if (arg1 != 31286) {
            this.field4417 = null;
        }
        if (arg0 || this.field4433 == null) {
            this.field4433 = new class644(this);
        }
        if (arg0 || this.field4427 == null) {
            this.field4427 = new class555(this);
        }
        if (arg0 || this.field4435 == null) {
            this.field4435 = new class31(this);
        }
        if (arg0 || this.field4419 == null) {
            this.field4419 = new class615(this);
        }
        if (arg0 || this.field4421 == null) {
            this.field4421 = new class448(this);
        }
        if (arg0 || this.field4447 == null) {
            this.field4447 = new class394(this);
        }
        if (arg0 || this.field4461 == null) {
            this.field4461 = new class394(this.field4447.method2473(-32350), this);
        }
        if (arg0 || this.field4428 == null) {
            this.field4428 = new class650(this);
        }
        if (arg0 || this.field4467 == null) {
            this.field4467 = new class339(this);
        }
        if (arg0 || this.field4425 == null) {
            this.field4425 = new class294(this);
        }
        if (arg0 || this.field4432 == null) {
            this.field4432 = new class94(this);
        }
        if (arg0 || this.field4448 == null) {
            this.field4448 = new class134(this);
        }
        if (arg0 || this.field4468 == null) {
            this.field4468 = new class134(this.field4448.method1099(-32350), this);
        }
        if (arg0 || this.field4452 == null) {
            this.field4452 = new class518(this);
        }
        if (arg0 || this.field4458 == null) {
            this.field4458 = new class518(this.field4452.method3022(-32350), this);
        }
        if (arg0 || this.field4456 == null) {
            this.field4456 = new class620(this);
        }
        if (arg0 || this.field4424 == null) {
            this.field4424 = new class616(this);
        }
        if (arg0 || this.field4451 == null) {
            this.field4451 = new class616(this.field4424.method3495(-32350), this);
        }
        if (arg0 || this.field4450 == null) {
            this.field4450 = new class677(this);
        }
        if (arg0 || this.field4426 == null) {
            this.field4426 = new class123(this);
        }
        if (arg0 || this.field4460 == null) {
            this.field4460 = new class442(this);
        }
        if (arg0 || this.field4454 == null) {
            this.field4454 = new class93(this);
        }
        if (arg0 || this.field4462 == null) {
            this.field4462 = new class656(this);
        }
        if (arg0 || this.field4469 == null) {
            this.field4469 = new class85(this);
        }
        if (arg0 || this.field4431 == null) {
            this.field4431 = new class85(this);
        }
        if (arg0 || this.field4412 == null) {
            this.field4412 = new class85(this);
        }
        if (arg0 || this.field4457 == null) {
            this.field4457 = new class85(this);
        }
        if (arg0 || this.field4442 == null) {
            this.field4442 = new class85(this);
        }
        if (arg0 || this.field4437 == null) {
            this.field4437 = new class602(this);
        }
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(ILcea;)V", line = 325)
    private final void method2060(int arg0, class215 arg1) {
        if (arg0 != 925) {
            return;
        }
        field4463++;
        if (arg1 == null || arg1.field3066 == null) {
            this.method2059(true, 31286);
        } else {
            int var3 = arg1.method1535(arg0 - 670);
            if (var3 < 23) {
                try {
                    this.method2057(arg0 + 29954, arg1, var3);
                } catch (Exception var4) {
                    this.method2059(true, 31286);
                }
                this.method2059(false, 31286);
            } else if (var3 > 24) {
                this.method2059(true, 31286);
            } else {
                this.field4413 = new class282(arg1.method1535(arg0 - 670), this);
                this.field4445 = new class282(this.field4413.method1857(arg0 ^ 0xFFFF823F), this);
                this.field4440 = new class640(arg1.method1535(255), this);
                this.field4429 = new class507(arg1.method1535(arg0 - 670), this);
                this.field4423 = new class621(arg1.method1535(arg0 - 670), this);
                this.field4443 = new class315(arg1.method1535(255), this);
                this.field4444 = new class218(arg1.method1535(255), this);
                this.field4453 = new class280(arg1.method1535(255), this);
                this.field4417 = new class107(arg1.method1535(255), this);
                this.field4433 = new class644(arg1.method1535(255), this);
                this.field4427 = new class555(arg1.method1535(arg0 - 670), this);
                this.field4435 = new class31(arg1.method1535(255), this);
                if (var3 >= 24) {
                    this.field4419 = new class615(arg1.method1535(255), this);
                }
                this.field4421 = new class448(arg1.method1535(255), this);
                this.field4447 = new class394(arg1.method1535(arg0 - 670), this);
                this.field4461 = new class394(this.field4447.method2473(-32350), this);
                this.field4428 = new class650(arg1.method1535(255), this);
                this.field4467 = new class339(arg1.method1535(255), this);
                this.field4425 = new class294(arg1.method1535(255), this);
                this.field4432 = new class94(arg1.method1535(255), this);
                this.field4448 = new class134(arg1.method1535(255), this);
                this.field4468 = new class134(this.field4448.method1099(-32350), this);
                this.field4452 = new class518(arg1.method1535(255), this);
                this.field4458 = new class518(this.field4452.method3022(-32350), this);
                this.field4456 = new class620(arg1.method1535(255), this);
                this.field4424 = new class616(arg1.method1535(255), this);
                this.field4451 = new class616(this.field4424.method3495(arg0 - 33275), this);
                this.field4450 = new class677(arg1.method1535(255), this);
                this.field4426 = new class123(arg1.method1535(255), this);
                this.field4460 = new class442(arg1.method1535(255), this);
                this.field4454 = new class93(arg1.method1535(255), this);
                this.field4462 = new class656(arg1.method1535(255), this);
                this.field4469 = new class85(arg1.method1535(255), this);
                this.field4431 = new class85(arg1.method1535(255), this);
                this.field4412 = new class85(arg1.method1535(255), this);
                this.field4457 = new class85(arg1.method1535(255), this);
                this.field4442 = new class85(arg1.method1535(arg0 - 670), this);
                this.field4437 = new class602(arg1.method1535(255), this);
                this.method2059(false, 31286);
            }
        }
        this.method2062((byte) 36);
    }

    @OriginalMember(owner = "client!dh", name = "b", descriptor = "(I)Z", line = 420)
    public final boolean method2061(int arg0) {
        if (arg0 > -61) {
            this.method2060(21, null);
        }
        field4414++;
        return this.field4468.method1100((byte) -120) && this.field4468.method1099(-32350) == 0 && this.field4418.method3097(-23688) < 96;
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(B)V", line = 449)
    private final void method2062(byte arg0) {
        field4416++;
        try {
            Field[] var2 = this.getClass().getDeclaredFields();
            if (arg0 != 36) {
                this.field4418 = null;
            }
            Field[] var3 = var2;
            for (int var4 = 0; var4 < var3.length; var4++) {
                Field var5 = var3[var4];
                if ((field4470 == null ? (field4470 = method2067("su")) : field4470).isAssignableFrom(var5.getType())) {
                    class212 var6 = (class212) var5.get(this);
                    var6.method418(false);
                }
            }
        } catch (IllegalAccessException var7) {
        }
    }

    @OriginalMember(owner = "client!dh", name = "d", descriptor = "(I)Lcea;", line = 487)
    public final class215 method2063(int arg0) {
        field4434++;
        class215 var2 = new class215(class145.method1140(arg0 ^ 0xFFFFFFE7));
        var2.method1526(false, arg0);
        var2.method1526(false, this.field4413.method1857(-32350));
        var2.method1526(false, this.field4440.method3631(-32350));
        var2.method1526(false, this.field4429.method2980(-32350));
        var2.method1526(false, this.field4423.method3539(-32350));
        var2.method1526(false, this.field4443.method2040(arg0 ^ 0xFFFF81BA));
        var2.method1526(false, this.field4444.method1557(-32350));
        var2.method1526(false, this.field4453.method1849(-32350));
        var2.method1526(false, this.field4417.method966(arg0 - 32374));
        var2.method1526(false, this.field4433.method3656(arg0 - 32374));
        var2.method1526(false, this.field4427.method3195(-32350));
        var2.method1526(false, this.field4435.method421(arg0 ^ 0xFFFF81BA));
        var2.method1526(false, this.field4419.method3484(-32350));
        var2.method1526(false, this.field4421.method2679(arg0 - 32374));
        var2.method1526(false, this.field4447.method2473(-32350));
        var2.method1526(false, this.field4428.method3678(-32350));
        var2.method1526(false, this.field4467.method2142(-32350));
        var2.method1526(false, this.field4425.method1925(-32350));
        var2.method1526(false, this.field4432.method887(-32350));
        var2.method1526(false, this.field4448.method1099(-32350));
        var2.method1526(false, this.field4452.method3022(-32350));
        var2.method1526(false, this.field4456.method3536(-32350));
        var2.method1526(false, this.field4424.method3495(arg0 - 32374));
        var2.method1526(false, this.field4450.method3809(-32350));
        var2.method1526(false, this.field4426.method1054(-32350));
        var2.method1526(false, this.field4460.method2662(-32350));
        var2.method1526(false, this.field4454.method886(-32350));
        var2.method1526(false, this.field4462.method3702(arg0 ^ 0xFFFF81BA));
        var2.method1526(false, this.field4469.method820(-32350));
        var2.method1526(false, this.field4431.method820(-32350));
        var2.method1526(false, this.field4412.method820(-32350));
        var2.method1526(false, this.field4457.method820(-32350));
        var2.method1526(false, this.field4442.method820(-32350));
        var2.method1526(false, this.field4437.method3426(-32350));
        return var2;
    }

    @OriginalMember(owner = "client!dh", name = "b", descriptor = "(B)Lrc;", line = 538)
    public final class538 method2064(byte arg0) {
        field4422++;
        if (arg0 >= -73) {
            method2066(false);
        }
        return this.field4418;
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(BLsu;I)V", line = 551)
    public final void method2065(byte arg0, class212 arg1, int arg2) {
        field4436++;
        if (arg0 != 74) {
            this.method2061(-10);
        }
        arg1.method1458(arg2, 72);
        this.method2062((byte) 36);
    }

    @OriginalMember(owner = "client!dh", name = "a", descriptor = "(Z)V", line = 575)
    public static void method2066(boolean arg0) {
        if (arg0) {
            field4420 = null;
        }
        field4446 = null;
        field4415 = null;
        field4465 = null;
        field4420 = null;
        field4438 = null;
        field4459 = null;
    }

    @OriginalMember(owner = "client!dh", name = "<init>", descriptor = "(Lsj;I)V", line = 589)
    public class322(class460 arg0, int arg1) {
        this.field4466 = arg0;
        this.field4418 = new class538(class689.field9299.field2525, class69.field1286, class153.field2496, class158.field2528.toLowerCase().indexOf("arm") != -1);
        this.field4468 = new class134(arg1, this);
        this.method2059(true, 31286);
    }

    @OriginalMember(owner = "client!dh", name = "<init>", descriptor = "(Lcea;Lsj;I)V", line = 600)
    public class322(class215 arg0, class460 arg1, int arg2) {
        this.field4466 = arg1;
        this.field4418 = new class538(class689.field9299.field2525, class69.field1286, class153.field2496, class158.field2528.indexOf("arm") != -1);
        this.field4468 = new class134(arg2, this);
        this.method2060(925, arg0);
    }
}
