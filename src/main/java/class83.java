import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!ja")
public class class83 {

    @OriginalMember(owner = "client!ja", name = "b", descriptor = "Lkb;")
    private static class93 field1521 = class76.method390(" has logged out)3", 0);

    @OriginalMember(owner = "client!ja", name = "a", descriptor = "Lkb;")
    private static class93 field1520 = class76.method390("and choose the (Wcreate account(W", 0);

    @OriginalMember(owner = "client!ja", name = "c", descriptor = "Lkb;")
    private static class93 field1522 = class76.method390("Loaded update list", 0);

    @OriginalMember(owner = "client!ja", name = "d", descriptor = "Lkb;")
    public static class93 field1523 = class76.method390("titlebutton", 0);

    @OriginalMember(owner = "client!ja", name = "i", descriptor = "Lkb;")
    public static class93 field1528 = field1522;

    @OriginalMember(owner = "client!ja", name = "l", descriptor = "Lkb;")
    private static class93 field1531 = class76.method390("Players", 0);

    @OriginalMember(owner = "client!ja", name = "j", descriptor = "Lkb;")
    public static class93 field1529 = field1520;

    @OriginalMember(owner = "client!ja", name = "n", descriptor = "Lkb;")
    public static class93 field1533 = class76.method390(":assistreq:", 0);

    @OriginalMember(owner = "client!ja", name = "h", descriptor = "Lkb;")
    public static class93 field1527 = class76.method390("Lade Schrifts-=tze )2 ", 0);

    @OriginalMember(owner = "client!ja", name = "o", descriptor = "Lkb;")
    public static class93 field1534 = field1521;

    @OriginalMember(owner = "client!ja", name = "p", descriptor = "I")
    public static int field1535 = 0;

    @OriginalMember(owner = "client!ja", name = "g", descriptor = "[[S")
    public static short[][] field1526 = new short[][] { { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 12, 24, 37, 49, 61, 74, 86, -25437, -26445, -27450, 9694, 21824, 123, 111, 99, 17814, 16801, 17837, 16697, 7341, 7496, 5330, 7384, 5268, 3230, 2223, 72, 10277, 8377, 8394, 7384, -22370, -22221, -22196, -22314, -29637, -27434, -29604, -25491, 662, 796, 933, 819, 10258, 6430, 5425, 5314, 10917, 10925, 10935, 10471, 10258, 10524, 10415, 10301, -11108, -11093, -11203, -8034, -5839, -6836, -5934, -32674, -14444, -15455, -15697, -15557, -15424, -11622, -11601, -11450, 7054, 7079, 5056, 6988, 8481, -30054, -30159, -30019, -21734, -21845, -21707, -21690, -21564, -24921, -24775, -24640, 662, 794, 811, 945, 827, 957, 5425, 5314, 11032, 10921, 11183, 11069, 11200, 4775, 3891, 3904, -18792, -19799, -20807, -20677, -20534, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 20366, 21274, 21415, 20401, 6569, 7613, 7630, 6364, 4300, 8412, 3294, 4193, 3303, 123, 111, 99, 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, 14990, 14746, 15779, 15795, 15944, 662, 796, 941, 951, 148, 6936, 5675, 5440, 10014, 11179, 11197, 10894, 10776, 10661, 10795, 10419, -10984, -11095, -11072, 12998, 12731, 11718, -6838, -32318, 4, 12, 24, 37, 49, 61, 74, 86 }, { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191, 949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20366, 20401, 662, 827, 7054, 5056, -21734, -21564, -14444, -15424, 11032, 11200, 4, 123, 61, -18792, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 8412, 8301, 8076, 6936, 5675, 941, 5056, 15795, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    @OriginalMember(owner = "client!ja", name = "e", descriptor = "Lkb;")
    public static class93 field1524 = field1531;

    @OriginalMember(owner = "client!ja", name = "f", descriptor = "I")
    public static int field1525;

    @OriginalMember(owner = "client!ja", name = "k", descriptor = "I")
    public static int field1530;

    @OriginalMember(owner = "client!ja", name = "m", descriptor = "Ljg;")
    public static class89 field1532;

    @OriginalMember(owner = "client!ja", name = "a", descriptor = "(I)V")
    public static final void method423(int arg0) {
        int var1 = class88.field1596 * 128 + 64;
        field1525++;
        int var2 = class36.field598 * 128 + 64;
        int var3 = class189.method1226(var2, -1, var1, class114.field2145) - class160.field3212;
        if (var3 > class108.field1965) {
            class108.field1965 += (var3 - class108.field1965) * class28.field454 / 1000 + class82.field1500;
            if (var3 < class108.field1965) {
                class108.field1965 = var3;
            }
        }
        if (class81.field1497 < var2) {
            class81.field1497 += class82.field1500 + (var2 - class81.field1497) * class28.field454 / 1000;
            if (var2 < class81.field1497) {
                class81.field1497 = var2;
            }
        }
        if (class152.field2939 < var1) {
            class152.field2939 += (var1 - class152.field2939) * class28.field454 / 1000 + class82.field1500;
            if (var1 < class152.field2939) {
                class152.field2939 = var1;
            }
        }
        if (var1 < class152.field2939) {
            class152.field2939 -= class82.field1500 + (class152.field2939 - var1) * class28.field454 / 1000;
            if (var1 > class152.field2939) {
                class152.field2939 = var1;
            }
        }
        if (class108.field1965 > var3) {
            class108.field1965 -= (class108.field1965 - var3) * class28.field454 / 1000 + class82.field1500;
            if (var3 > class108.field1965) {
                class108.field1965 = var3;
            }
        }
        if (arg0 >= -33) {
            return;
        }
        int var4 = class53.field894 * 128 + 64;
        if (var2 < class81.field1497) {
            class81.field1497 -= (class81.field1497 - var2) * class28.field454 / 1000 + class82.field1500;
            if (var2 > class81.field1497) {
                class81.field1497 = var2;
            }
        }
        int var5 = class136.field2646 * 128 + 64;
        int var6 = class189.method1226(var5, -1, var4, class114.field2145) - class51.field849;
        int var7 = var6 - class108.field1965;
        int var8 = var4 - class152.field2939;
        int var9 = var5 - class81.field1497;
        int var10 = (int) Math.sqrt((double) (var8 * var8 + var9 * var9));
        int var11 = (int) (Math.atan2((double) var7, (double) var10) * 325.949D) & 0x7FF;
        int var12 = (int) (-325.949D * Math.atan2((double) var8, (double) var9)) & 0x7FF;
        int var13 = var12 - class141.field2763;
        if (var13 > 1024) {
            var13 -= 2048;
        }
        if (var13 < -1024) {
            var13 += 2048;
        }
        if (var13 > 0) {
            class141.field2763 += class1.field14 * var13 / 1000 + class82.field1507;
            class141.field2763 &= 0x7FF;
        }
        if (var13 < 0) {
            class141.field2763 -= -var13 * class1.field14 / 1000 + class82.field1507;
            class141.field2763 &= 0x7FF;
        }
        if (var11 < 128) {
            var11 = 128;
        }
        if (var11 > 383) {
            var11 = 383;
        }
        int var14 = var12 - class141.field2763;
        if (var14 > 1024) {
            var14 -= 2048;
        }
        if (class184.field3629 < var11) {
            class184.field3629 += (var11 - class184.field3629) * class1.field14 / 1000 + class82.field1507;
            if (var11 < class184.field3629) {
                class184.field3629 = var11;
            }
        }
        if (var11 < class184.field3629) {
            class184.field3629 -= (class184.field3629 - var11) * class1.field14 / 1000 + class82.field1507;
            if (class184.field3629 < var11) {
                class184.field3629 = var11;
            }
        }
        if (var14 < -1024) {
            var14 += 2048;
        }
        if (var14 < 0 && var13 > 0 || var14 > 0 && var13 < 0) {
            class141.field2763 = var12;
        }
    }

    @OriginalMember(owner = "client!ja", name = "a", descriptor = "(Z)V")
    public static void method424(boolean arg0) {
        field1533 = null;
        field1528 = null;
        field1520 = null;
        field1531 = null;
        field1529 = null;
        field1524 = null;
        field1521 = null;
        field1532 = null;
        field1526 = null;
        field1534 = null;
        if (!arg0) {
            field1521 = null;
        }
        field1522 = null;
        field1523 = null;
        field1527 = null;
    }
}
