import java.lang.reflect.Method;
import org.openrs2.deob.annotation.OriginalClass;
import org.openrs2.deob.annotation.OriginalMember;

@OriginalClass("client!uc")
public class class38 {

    @OriginalMember(owner = "client!uc", name = "d", descriptor = "I")
    public static int field656 = 0;

    @OriginalMember(owner = "client!uc", name = "e", descriptor = "Lwk;")
    public static class273 field657 = new class273(64);

    @OriginalMember(owner = "client!uc", name = "l", descriptor = "[I")
    public static int[] field664 = new int[] { 1, 1, 0, 0, 0, 8, 0, 0, 8 };

    @OriginalMember(owner = "client!uc", name = "h", descriptor = "[[S")
    public static short[][] field660 = new short[][] { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 }, { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 } };

    @OriginalMember(owner = "client!uc", name = "a", descriptor = "I")
    public static int field653;

    @OriginalMember(owner = "client!uc", name = "b", descriptor = "I")
    public static int field654;

    @OriginalMember(owner = "client!uc", name = "c", descriptor = "I")
    public static int field655;

    @OriginalMember(owner = "client!uc", name = "f", descriptor = "I")
    public static int field658;

    @OriginalMember(owner = "client!uc", name = "g", descriptor = "I")
    public static int field659;

    @OriginalMember(owner = "client!uc", name = "i", descriptor = "I")
    public static int field661;

    @OriginalMember(owner = "client!uc", name = "j", descriptor = "I")
    public static int field662;

    @OriginalMember(owner = "client!uc", name = "k", descriptor = "I")
    public static int field663;

    // $FF: synthetic field
    @OriginalMember(owner = "client!uc", name = "m", descriptor = "Ljava/lang/Class;")
    public static Class field665;

    @OriginalMember(owner = "client!uc", name = "a", descriptor = "(BIIII)V")
    public static final void method293(byte arg0, int arg1, int arg2, int arg3, int arg4) {
        if (class165.field2890 < 100) {
            class75.method520((byte) -115);
        }
        field658++;
        class68.method453(arg1, arg4, arg1 + arg2, arg4 - -arg3);
        if (class165.field2890 < 100) {
            byte var5 = 20;
            int var6 = arg1 + (arg2 / 2);
            int var7 = arg4 + (arg3 / 2) - (var5 + 18);
            class68.method465(arg1, arg4, arg2, arg3, 0);
            class68.method447(var6 - 152, var7, 304, 34, 9179409);
            class68.method447(var6 - 151, var7 + 1, 302, 32, 0);
            class68.method465(var6 - 150, var7 - -2, class165.field2890 * 3, 30, 9179409);
            class68.method465(class165.field2890 * 3 + var6 - 150, var7 + 2, 300 - (class165.field2890 * 3), 30, 0);
            class228.field3950.method481(class192.field3376, var6, var5 + var7, 16777215, -1);
            return;
        }
        class277.field4869 = class217.field3775 - ((int) ((float) arg2 / class31.field560));
        class47.field793 = (int) ((float) (arg2 * 2) / class31.field560);
        class127.field2219 = (int) ((float) (arg3 * 2) / class31.field560);
        class153.field2728 = class119.field2102 - (int) ((float) arg3 / class31.field560);
        int var8 = class217.field3775 - (int) ((float) arg2 / class31.field560);
        int var9 = class119.field2102 - ((int) ((float) arg3 / class31.field560));
        int var10 = (int) ((float) arg2 / class31.field560) + class217.field3775;
        int var11 = (int) ((float) arg3 / class31.field560) + class119.field2102;
        class179.method1202(var10, var11, var9, arg1 + arg2, 32390, arg4, arg3 + arg4, arg1, var8);
        class88.method605(var10, var9, arg4, var8, arg1, var11, (byte) -100, arg3 + arg4, arg1 + arg2);
        class23.method138(var10, arg4, arg0 - 45, var9, arg1, var11, arg4 + arg3, var8, arg1 + arg2);
        if (class97.field1628 > 0) {
            class97.field1628--;
        }
        if (arg0 != -60) {
            method300((byte) 93);
        }
        if (!class170.field3022) {
            return;
        }
        int var12 = arg1 + arg2 - 5;
        int var13 = arg4 + arg3 - 8;
        class44.field768.method492(class198.method1332(95, new class99[] { class18.field191, class198.method1333(-87, class194.field3409) }), var12, var13, 16776960, -1);
        int var17 = var13 - 15;
        Runtime var14 = Runtime.getRuntime();
        int var15 = (int) ((var14.totalMemory() - var14.freeMemory()) / 1024L);
        int var16 = 16776960;
        if (var15 > 65536) {
            var16 = 16711680;
        }
        class44.field768.method492(class198.method1332(73, new class99[] { class222.field3854, class198.method1333(-111, var15), class89.field1534 }), var12, var17, var16, -1);
        var13 = var17 - 15;
    }

    @OriginalMember(owner = "client!uc", name = "a", descriptor = "(B)V")
    public static final void method294(byte arg0) {
        field662++;
        class32.field575.method1812(-89);
        int var1 = 87 % ((-arg0 - 12) / 44);
    }

    @OriginalMember(owner = "client!uc", name = "a", descriptor = "(I)V")
    public static final void method295(int arg0) {
        field663++;
        try {
            Method var1 = (field665 == null ? (field665 = method301("java.lang.Runtime")) : field665).getMethod("maxMemory");
            if (var1 != null) {
                try {
                    Runtime var2 = Runtime.getRuntime();
                    Long var3 = (Long) var1.invoke(var2, (Object[]) null);
                    var3;
                } catch (Throwable var4) {
                }
            }
        } catch (Exception var5) {
        }
        if (arg0 < 37) {
            method293((byte) 103, 7, 68, -61, 116);
        }
    }

    @OriginalMember(owner = "client!uc", name = "a", descriptor = "(II)I")
    public static final int method296(int arg0, int arg1) {
        if (arg1 > -79) {
            return 100;
        } else {
            field655++;
            return arg0 & 0xFF;
        }
    }

    @OriginalMember(owner = "client!uc", name = "b", descriptor = "(II)Ljb;")
    public static final class270 method297(int arg0, int arg1) {
        field659++;
        class270 var2 = (class270) class262.field4629.method1811((long) arg1, 66);
        if (var2 != null) {
            return var2;
        }
        byte[] var3 = client.field2774.method1242(class271.method1793(arg1, -112), class167.method1136(arg1, arg0 - 881745373), 6801);
        class270 var4 = new class270();
        if (var3 != null) {
            var4.method1781(true, new class261(var3));
        }
        var4.method1786(2);
        if (arg0 == 132) {
            class262.field4629.method1817((long) arg1, 16, var4);
            return var4;
        } else {
            return null;
        }
    }

    @OriginalMember(owner = "client!uc", name = "c", descriptor = "(II)V")
    public static final void method298(int arg0, int arg1) {
        field653++;
        class65 var2 = class152.method1010(arg0, 9, (byte) -111);
        if (arg1 >= 67) {
            var2.method426((byte) 98);
        }
    }

    @OriginalMember(owner = "client!uc", name = "d", descriptor = "(II)V")
    public static final void method299(int arg0, int arg1) {
        field654++;
        class65 var2 = class152.method1010(arg0, 2, (byte) -117);
        var2.method426((byte) -29);
        if (arg1 != 10124) {
            field657 = null;
        }
    }

    @OriginalMember(owner = "client!uc", name = "b", descriptor = "(B)V")
    public static void method300(byte arg0) {
        if (arg0 >= 12) {
            field660 = null;
            field657 = null;
            field664 = null;
        }
    }

    // $FF: synthetic method
    @OriginalMember(owner = "client!uc", name = "a", descriptor = "(Ljava/lang/String;)Ljava/lang/Class;")
    public static Class method301(String arg0) {
        try {
            return Class.forName(arg0);
        } catch (ClassNotFoundException var2) {
            throw new NoClassDefFoundError(var2.getMessage());
        }
    }
}
