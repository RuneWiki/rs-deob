sign/signlink=sign/signlink
client=client
a=GameShell
a.aZ=_flowObfuscator1
a.bZ=_flowObfuscator2
a.cI=_flowObfuscator3
a.dZ=_flowObfuscator4
a.eB=_flowObfuscator5
a.fI=_flowObfuscator6
a.gI=state
a.hI=deltime
a.iI=mindel
a.j[J=otim
a.kI=fps
a.lI=screenWidth
a.mI=screenHeight
a.nLjava/awt/Graphics;=graphics
a.oLqb;=drawArea
a.p[Lhb;=temp
a.qLb;=frame
a.rZ=refresh
a.sI=idleCycles
a.tI=mouseButton
a.uI=mouseX
a.vI=mouseY
a.wI=mouseClickButton
a.xI=mouseClikcX
a.yI=mouseClickY
a.z[I=actionKey
a.A[I=keyQueue
a.BI=keyQueueReadPos
a.CI=keyQueueWritePos
a.DI=_flowObfuscator7
a.a(III)V=initApplication
a.a(IZI)V=initApplet
a.a(I)V=shutdown
a.a(II)V=setFramerate
a.a(Z)I=pollKey
a.a()V=load
a.b(I)V=update
a.a(B)V=unload
a.b(Z)V=draw
a.c(I)V=refresh
a.b(B)Ljava/awt/Component;=getBaseComponent
a.a(Ljava/lang/Runnable;I)V=startThread
a.a(ZLjava/lang/String;I)V=drawProgress
b=ViewBox
c=World
d=ClientStream
e=InputTracking
f=AnimBase
f.a[Lf;=instances
f.bI=length
f.c[I=types
f.d[[I=labels
f.a(ZLub;)V=unpack
g=AnimFrame
g.a[Lg;=instances
g.bI=delay
g.cLf;=base
g.dI=length
g.e[I=groups
g.f[I=x
g.g[I=y
g.h[I=z
g.a(ZLub;)V=unpack
h=Decor
i=TileOverlay
j=GroundDecor
k=GroundObject
l=Metadata
m=Occlude
n=VertexNormal
o=TileUnderlay
p=Location
q=Wall
r=World3D
s=LruCache
t=HashTable
u=Linkable
u.aJ=key
u.bLu;=next
u.cLu;=prev
u.dI=_flowObfuscator1
u.a()V=unlink
v=ObjStackEntity
w=Entity
x=PathingEntity
y=NpcEntity
z=PlayerEntity
ab=ProjectileEntity
bb=SpotAnimEntity
cb=Tile
db=DoublyLinkable
db.eLdb;=next2
db.fLdb;=prev2
db.gI=_flowObfuscator2
db.b()V=unlink2
eb=Model
fb=Pix2D
gb=Pix3D
hb=Pix32
ib=Pix8
jb=PixFont
kb=Packet
lb=LocMerged
mb=LocSpawned
nb=LocEntity
ob=LinkList
pb=DoublyLinkList
qb=PixMap
qb.b[I=pixels
qb.cI=width
qb.dI=height
qb.eLjava/awt/image/ColorModel;=colorModel
qb.fLjava/awt/image/ImageConsumer;=imageConsumer
qb.gLjava/awt/Image;=image
qb.a(B)=bind
qb.a(ILjava/awt/Graphics;II)V=draw
qb.a()V=setPixels
rb=BZip2
rb.aLsb;=state
rb.a([BI[BII)I=read
rb.a(Lsb;)V=unRLE_obuf_to_output_FAST
rb.b(Lsb;)V=BZ2_decompress
rb.c(Lsb;)B=GET_UCHAR
rb.d(Lsb;)B=GET_BIT
rb.a(Lsb;)V=makeMaps_d
rb.a([I[I[I[BIII)V=hbCreateDecodeTables
sb=BZip2State
sb.aI=MTFA_SIZE
sb.bI=MTFL_SIZE
sb.cI=BZ_MAX_ALPHA_SIZE
sb.dI=BZ_MAX_CODE_LEN
sb.fI=BZ_N_GROUPS
sb.gI=BZ_G_SIZE
sb.iI=BZ_MAX_SELECTORS
sb.j[B=stream
sb.kI=next_in
sb.lI=avail_in
sb.mI=total_in_lo32
sb.nI=total_in_hi32
sb.o[B=decompressed
sb.pI=next_out
sb.qI=avail_out
sb.rI=total_out_lo32
sb.sI=total_out_hi32
sb.tB=state_out_ch
sb.uI=state_out_len
sb.vZ=blockRandomized
sb.wI=bsBuff
sb.xI=bsLive
sb.yI=blockSize100k
sb.zI=currBlockNo
sb.AI=origPtr
sb.BI=tPos
sb.CI=k0
sb.D[I=unzftab
sb.EI=c_nblock_used
sb.F[I=cftab
sb.G[I=cftabCopy
sb.H[I=tt
sb.II=nInUse
sb.J[Z=inUse
sb.K[Z=inUse16
sb.L[B=seqToUnseq
sb.M[B=mtfa
sb.N[I=mtfbase
sb.O[B=selector
sb.P[B=selectorMtf
sb.Q[[B=len
sb.R[[I=limit
sb.S[[I=base
sb.T[[I=perm
sb.U[I=minLens
sb.VI=save_nblock
tb=Isaac
tb.aI=count
tb.b[I=rsl
tb.c[I=mem
tb.dI=a
tb.eI=b
tb.fI=c
tb.a()I=nextInt
tb.b()V=isaac
tb.c()V=init
ub=Jagfile
ub.aZ=_flowObfuscator1
ub.bB=_flowObfuscator2
ub.cI=_flowObfuscator3
ub.dZ=_flowObfuscator4
ub.e[B=buffer
ub.fI=fileCount
ub.g[I=fileHash
ub.h[I=fileUnpackedSize
ub.i[I=filePackedSize
ub.j[I=filePos
ub.kZ=unpacked
ub.a(Z[B)V=load
ub.a(Ljava/lang/String;[BB)[B=read
vb=JString
wb=WordPack
xb=Envelope
yb=Wave
zb=Tone
ac=LocType
bc=NpcType
cc=ObjType
dc=Protocol
dc.a[I=CLIENTPROT_SCRAMBLED
dc.b[I=SERVERPROT_SIZES
ec=CollisionMap
fc=FloType
gc=IdkType
hc=Component
ic=UnkType
jc=SeqType
kc=SpotAnimType
lc=VarpType
mc=WordFilter
